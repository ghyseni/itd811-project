package application.model;

import java.sql.ResultSet;
import java.sql.SQLException;

import application.util.DBUtil;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;

public class UserDAO {

	// *******************************
	// SELECT an User by ID
	// *******************************
	public static User searchUser(String usrId) throws SQLException, ClassNotFoundException {
		// Declare a SELECT statement
		String selectStmt = "SELECT * FROM users WHERE user_id=" + usrId;

		// Execute SELECT statement
		try {
			// Get ResultSet from dbExecuteQuery method
			ResultSet rsEmp = DBUtil.dbExecuteQuery(selectStmt);

			// Send ResultSet to the getUserFromResultSet method and get user object
			User user = getUserFromResultSet(rsEmp);

			// Return user object
			return user;
		} catch (SQLException e) {
			System.out.println("While searching an user with " + usrId + " id, an error occurred: " + e);
			// Return exception
			throw e;
		}
	}

	// *******************************
	// SELECT an User by ID
	// *******************************
	public static User searchUserByUsernamePassword(String username, String password)
			throws SQLException, ClassNotFoundException {
		// Declare a SELECT statement
		String selectStmt = "SELECT * FROM users WHERE username=" + username;

		// Execute SELECT statement
		try {
			// Get ResultSet from dbExecuteQuery method
			ResultSet rs = DBUtil.dbExecuteQuery(selectStmt);

			// Send ResultSet to the getUserFromResultSet method and get user object
			User user = getUserFromResultSet(rs);

			// Return user object
			return user;
		} catch (SQLException e) {
			System.out.println("While searching an user with " + username + " username, an error occurred: " + e);
			// Return exception
			throw e;
		}
	}

	// Use ResultSet from DB as parameter and set User Object's attributes and
	// return user object.
	private static User getUserFromResultSet(ResultSet rs) throws SQLException {
		User usr = null;
		if (rs.next()) {
			usr = new User();
			usr.setUserId(rs.getInt("EMPLOYEE_ID"));
			usr.setUsername(rs.getString("FIRST_NAME"));
		}
		return usr;
	}

	// *******************************
	// SELECT Users
	// *******************************
	public static ObservableList<User> searchUsers() throws SQLException, ClassNotFoundException {
		// Declare a SELECT statement
		String selectStmt = "SELECT * FROM users";

		// Execute SELECT statement
		try {
			// Get ResultSet from dbExecuteQuery method
			ResultSet rsUsers = DBUtil.dbExecuteQuery(selectStmt);

			// Send ResultSet to the getUserList method and get usrloyee object
			ObservableList<User> usrList = getUserList(rsUsers);

			// Return usr object
			return usrList;
		} catch (SQLException e) {
			System.out.println("SQL select operation has been failed: " + e);
			// Return exception
			throw e;
		}
	}

	// Select * from employees operation
	private static ObservableList<User> getUserList(ResultSet rs) throws SQLException, ClassNotFoundException {
		// Declare a observable List which comprises of User objects
		ObservableList<User> empList = FXCollections.observableArrayList();

		while (rs.next()) {
			User usr = new User();
			usr.setUserId(rs.getInt("user_id"));
			usr.setUsername(rs.getString("username"));
			usr.setFirstName(rs.getString("first_name"));
			usr.setLastName(rs.getString("last_name"));
			usr.setDepartmentId(rs.getInt("department_id"));
			// Add employee to the ObservableList
			empList.add(usr);
		}
		// return empList (ObservableList of Users)
		return empList;
	}

	// *************************************
	// UPDATE a user name
	// *************************************
	public static void updateUsername(String usrId, String usrName) throws SQLException, ClassNotFoundException {
		// Declare a UPDATE statement
		String updateStmt = "BEGIN\n" + "   UPDATE users\n" + "      SET user_name = '" + usrName + "'\n"
				+ "    WHERE user_id = " + usrId + ";\n" + "   COMMIT;\n" + "END;";

		// Execute UPDATE operation
		try {
			DBUtil.dbExecuteUpdate(updateStmt);
		} catch (SQLException e) {
			System.out.print("Error occurred while UPDATE Operation: " + e);
			throw e;
		}
	}

	// *************************************
	// DELETE a user
	// *************************************
	public static void deleteEmpWithId(String empId) throws SQLException, ClassNotFoundException {
		// Declare a DELETE statement
		String updateStmt = "BEGIN\n" + "   DELETE FROM users\n" + "         WHERE user_id =" + empId + ";\n"
				+ "   COMMIT;\n" + "END;";

		// Execute UPDATE operation
		try {
			DBUtil.dbExecuteUpdate(updateStmt);
		} catch (SQLException e) {
			System.out.print("Error occurred while DELETE Operation: " + e);
			throw e;
		}
	}

	// *************************************
	// INSERT a user
	// *************************************
	public static void insertUser(String username, String password, String firstName, String lastName)
			throws SQLException, ClassNotFoundException {
		// Declare a DELETE statement
		String updateStmt = "BEGIN\n" + "INSERT INTO users\n"
				+ "(user_id, username, password, first_name, last_name, user_role, created_at)\n" + "VALUES\n"
				+ "(sequence_employee.nextval,'" + username + "','" + password + "','" + firstName + "','" + lastName
				+ "','" + password + "',SYSDATE);\n" + "END;";

		// Execute DELETE operation
		try {
			DBUtil.dbExecuteUpdate(updateStmt);
		} catch (SQLException e) {
			System.out.print("Error occurred while DELETE Operation: " + e);
			throw e;
		}
	}

}
